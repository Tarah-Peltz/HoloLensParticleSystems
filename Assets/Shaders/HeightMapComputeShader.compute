// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Particle
{
	float4 position;
	float4 velocity;
};

// Particle's data, shared with the shader
RWStructuredBuffer<Particle> particleBuffer;
Texture2D<float4> HeightMapTexture;
SamplerState samplerHeightMapTexture;
//StructuredBuffer<float4> heightMap;

// Variables passed from the CPU
float _time;
float4 textureCenter;
float textureXLength;
float textureZLength;


[numthreads(8, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	//https://msdn.microsoft.com/en-us/library/windows/desktop/bb509699(v=vs.85).aspx
	float4 texLookup = HeightMapTexture.SampleLevel(samplerHeightMapTexture, float2(((particleBuffer[id.x].position.x + (textureXLength / 2) - textureCenter.x)/ textureXLength), 
		((particleBuffer[id.x].position.z + (textureZLength / 2) - textureCenter.z) / textureZLength)), 0.0);
	particleBuffer[id.x].position.y -= particleBuffer[id.x].velocity.y;
	if (particleBuffer[id.x].position.y == texLookup.y * 6 - 6) {
		particleBuffer[id.x].velocity.y = 0.0;
	}
	
}