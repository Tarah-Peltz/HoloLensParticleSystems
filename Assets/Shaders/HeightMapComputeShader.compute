// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Particle
{
	float3 position;
	float3 velocity;
};

// Particle's data, shared with the shader
RWStructuredBuffer<Particle> particleBuffer;
Texture2D<float4> heightMap;

// Variables passed from the CPU
float _time;

[numthreads(1000, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	//particleBuffer[id.x].position.x = particleBuffer[id.x].position.x + sin(_time * 3.141592) / 100;
	//particleBuffer[id.x].position.z = particleBuffer[id.x].position.z + cos(_time * 3.141592) / 100;
	particleBuffer[id.x].position.x = heightMap[id].x;
	particleBuffer[id.x].position.y = heightMap[id].x + heightMap[id.x].y + heightMap[id.x].z;
	particleBuffer[id.x].position.z = heightMap[id].z;
}